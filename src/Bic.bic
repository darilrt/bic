import "iostream";
import "vector";
import "fstream";
import "tuple";

import "Token.bic";
import "Lexer.bic";
import "Parser.bic";
import "AST.bic";
import "CodeGenerator.bic";
import "IRGenerator.bic";

main(argc : int, argv[] : char*) -> int {
    mut file : std::ifstream = std::ifstream("test.bic");
    mut fileContents : std::string = "";
    mut line : std::string = "";

    while (std::getline(file, line)) {
        fileContents += line + "\n";
    }
    
    mut lexer : Lexer* = new Lexer(fileContents); 
    mut parser : Parser* = new Parser(lexer);
    let root : ASTNode* = parser->Parse();

    mut irGenerator : IRGenerator* = new IRGenerator();
    let ir : IRNode* = irGenerator->Generate(root);

    mut codeGenerator : CodeGenerator* = new CodeGenerator();
    codeGenerator->Generate(ir);

    std::cout << "Source:" << std::endl;
    std::cout << codeGenerator->sourceBuffer << std::endl;

    std::cout << "Header:" << std::endl;
    std::cout << codeGenerator->headerBuffer << std::endl;

    del lexer;
    del parser;
    del root;
    del irGenerator;

    ret 0;
}
